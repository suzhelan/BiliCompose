[versions]
agp = "8.13.0"
androidx-activityCompose = "1.11.0"
androidx-lifecycle = "2.9.5"

coil = "3.3.0"
compose-multiplatform = "1.9.1"
composeWebviewMultiplatform = "2.0.3"
constraintlayoutComposeMultiplatform = "0.6.1"
fastkv = "3.0.1"
kotlin = "2.2.20"
kotlinx-coroutines = "1.10.2"
kotlinxDatetime = "0.7.1"
krypto = "4.0.10"
mediamp = "0.0.29"
multiplatformSettings = "1.3.0"
napier = "2.7.1"

ktor = "3.3.1"
logback = "1.5.20"
navigationCompose = "2.9.1"
okio = "3.16.2"
paging = "3.4.0-alpha04"
qrKit = "3.1.3"
sonner = "0.3.8"

kotlinx-serialization = "1.9.0"
androidx-media3 = "1.8.0"

#noinspection NewerVersionAvailable
vlcj = "4.8.4"
material3 = "1.4.0"

[libraries]
# Gradle plugins
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
android-library-gradle-plugin = { module = "com.android.library:com.android.library.gradle.plugin", version.ref = "agp" }
android-application-gradle-plugin = { module = "com.android.application:com.android.application.gradle.plugin", version.ref = "agp" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
compose-multiplatfrom-gradle-plugin = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "compose-multiplatform" }
kotlin-compose-compiler-gradle-plugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }

#comon libraries
#webview 在desktop需要额外配置
compose-webview-multiplatform = { module = "io.github.kevinnzou:compose-webview-multiplatform", version.ref = "composeWebviewMultiplatform" }
#coil 异步图片加载库
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-ktor3 = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
#kotlinx跨平台时间工具库
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
#viewmodel
# JetBrains Compose Multiplatform
lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
lifecycle-viewmodel-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }

navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
#音视频播放器
mediamp-all = { module = "org.openani.mediamp:mediamp-all", version.ref = "mediamp" }
qr-kit = { module = "network.chaintech:qr-kit", version.ref = "qrKit" }
vlcj = { module = "uk.co.caprica:vlcj", version.ref = "vlcj" }

#跨平台存储框架
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }
#跨平台日志框架
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
#ok系列的IO工具
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

#跨平台加密
krypto = { module = "com.soywiz.korlibs.krypto:krypto", version.ref = "krypto" }

#约束布局
constraintlayout-compose-multiplatform = { module = "tech.annexflow.compose:constraintlayout-compose-multiplatform", version.ref = "constraintlayoutComposeMultiplatform" }
#跨平台分页加载
paging-compose = { module = "androidx.paging:paging-compose", version.ref = "paging" }
#toast
sonner = { module = "io.github.dokar3:sonner", version.ref = "sonner" }

#kotlin序列化
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "kotlinx-serialization" }


#ios
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }

#server
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }

#ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
#序列化用
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
#ktor引擎 每个引擎功能和平台都不太一样
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
#打印
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }


#android
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "androidx-media3" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
fastkv = { module = "io.github.billywei01:fastkv", version.ref = "fastkv" }
androidx-lifecycle-process = { group = "androidx.lifecycle", name = "lifecycle-process", version.ref = "androidx-lifecycle" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "material3" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
androidKotlinMultiplatformLibrary = { id = "com.android.kotlin.multiplatform.library", version.ref = "agp" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

#对Server的支持
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
